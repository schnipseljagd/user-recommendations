service: user-recommendations

provider:
  name: aws
  runtime: nodejs4.3
  memorySize: 128 # optional, default is 1024
  stage: dev
  region: eu-west-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:*:*:*"
    - Effect: Allow
      Action:
        - dynamodb:DescribeStream
        - dynamodb:GetRecords
        - dynamodb:GetShardIterator
        - dynamodb:ListStreams
      Resource: "arn:aws:dynamodb:*:*:table/recommendations"
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
      Resource: "arn:aws:lambda:*:*:*"
functions:
  usersCreate:
    handler: handler.usersCreate
    events:
      - http:
          path: users
          method: post
          cors: true
  usersReadAll:
    handler: handler.usersReadAll
    events:
      - http:
          path: users
          method: get
          cors: true
  placesCreate:
    handler: handler.placesCreate
    events:
      - http:
          path: places
          method: post
          cors: true
  placesReadAll:
    handler: handler.placesReadAll
    events:
      - http:
          path: places
          method: get
          cors: true
  recommendationsCreate:
    handler: handler.recommendationsCreate
    events:
      - http:
          path: recommendations
          method: post
          cors: true
  recommendationsReadByUserId:
    handler: handler.recommendationsReadByUserId
    events:
      - http:
          path: recommendations/{userId}
          method: get
          cors: true
  createRecommendationForCreatedPlace:
    handler: handler.createRecommendationForCreatedPlace
    events:
      - stream:
          arn: ${env:PLACES_DYNAMODB_TABLE_STREAM_ARN}

resources:
  Resources:
    UsersDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        TableName: 'users'
    PlacesDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
          -
            AttributeName: createdBy
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
          -
            AttributeName: createdBy
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        TableName: 'places'
        StreamSpecification:
          StreamViewType: NEW_IMAGE

    RecommendationsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: userId
            AttributeType: S
        KeySchema:
          -
            AttributeName: userId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        TableName: 'recommendations'
  Outputs:
    PlacesDymamoDbTableStreamArn:
      Description: The PlacesDynamoDbTable StreamArn
      Value:
        'Fn::GetAtt': [ PlacesDynamoDbTable, StreamArn ]
      Export:
        Name: PlacesDynamoDbTableStreamArn
